{"ast":null,"code":"import { cartActionsTypes } from \"./cart.types\";\nconst INITIAL_STATE = {\n  cartItems: []\n};\n\nconst cartReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case cartActionsTypes.ADD_ITEM_TO_CART:\n      const itemToAdd = action.payload;\n      const itemExists = state.cartItems.find(cartItem => cartItem.id === itemToAdd.id && cartItem.color === itemToAdd.color && cartItem.size === itemToAdd.size);\n\n      if (itemExists) {\n        return {\n          cartItems: state.cartItems.map(cartItem => {\n            if (cartItem.id === itemToAdd.id && cartItem.color === itemToAdd.color && cartItem.size === itemToAdd.size) {\n              return { ...cartItem,\n                qty: cartItem.qty + 1,\n                color: itemToAdd.color,\n                size: itemToAdd.size\n              };\n            } else {\n              console.log(\"item EXISTS case 2\");\n              return { ...cartItem\n              };\n            }\n          })\n        };\n      } else {\n        return {\n          cartItems: [...state.cartItems, itemToAdd]\n        };\n      }\n\n    case cartActionsTypes.REMOVE_ITEM_FROM_CART:\n      const itemToRemove = action.payload;\n      return {\n        cartItems: state.cartItems.filter(cartItem => cartItem.id != itemToRemove.id && (cartItem.color !== itemToRemove.color || cartItem.size !== itemToRemove.size))\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default cartReducer;","map":{"version":3,"sources":["/home/rony/RONY/BUSINESS/ecommerce-react-node/front-end/src/redux/cart/cart.reducer.js"],"names":["cartActionsTypes","INITIAL_STATE","cartItems","cartReducer","state","action","type","ADD_ITEM_TO_CART","itemToAdd","payload","itemExists","find","cartItem","id","color","size","map","qty","console","log","REMOVE_ITEM_FROM_CART","itemToRemove","filter"],"mappings":"AAAA,SAAQA,gBAAR,QAA+B,cAA/B;AAEA,MAAMC,aAAa,GAAG;AAClBC,EAAAA,SAAS,EAAE;AADO,CAAtB;;AAIA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGH,aAAT,EAAwBI,MAAxB,KAAmC;AACnD,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKN,gBAAgB,CAACO,gBAAtB;AAEI,YAAMC,SAAS,GAAGH,MAAM,CAACI,OAAzB;AACA,YAAMC,UAAU,GAAGN,KAAK,CAACF,SAAN,CAAgBS,IAAhB,CAAqBC,QAAQ,IAAIA,QAAQ,CAACC,EAAT,KAAgBL,SAAS,CAACK,EAA1B,IAAgCD,QAAQ,CAACE,KAAT,KAAmBN,SAAS,CAACM,KAA7D,IAAsEF,QAAQ,CAACG,IAAT,KAAkBP,SAAS,CAACO,IAAnI,CAAnB;;AAEA,UAAIL,UAAJ,EAAgB;AAEZ,eAAO;AAEHR,UAAAA,SAAS,EAAEE,KAAK,CAACF,SAAN,CAAgBc,GAAhB,CAAoBJ,QAAQ,IAAI;AAEvC,gBAAIA,QAAQ,CAACC,EAAT,KAAgBL,SAAS,CAACK,EAA1B,IAAgCD,QAAQ,CAACE,KAAT,KAAmBN,SAAS,CAACM,KAA7D,IAAsEF,QAAQ,CAACG,IAAT,KAAkBP,SAAS,CAACO,IAAtG,EAA4G;AACxG,qBAAO,EAAC,GAAGH,QAAJ;AAAcK,gBAAAA,GAAG,EAAEL,QAAQ,CAACK,GAAT,GAAe,CAAlC;AAAqCH,gBAAAA,KAAK,EAAEN,SAAS,CAACM,KAAtD;AAA6DC,gBAAAA,IAAI,EAAEP,SAAS,CAACO;AAA7E,eAAP;AAEH,aAHD,MAGO;AACHG,cAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AACA,qBAAO,EAAC,GAAGP;AAAJ,eAAP;AACH;AAEJ,WAVU;AAFR,SAAP;AAcH,OAhBD,MAgBO;AACH,eAAO;AACHV,UAAAA,SAAS,EAAE,CAAC,GAAGE,KAAK,CAACF,SAAV,EAAqBM,SAArB;AADR,SAAP;AAGH;;AAEL,SAAKR,gBAAgB,CAACoB,qBAAtB;AACI,YAAMC,YAAY,GAAGhB,MAAM,CAACI,OAA5B;AACA,aAAO;AAACP,QAAAA,SAAS,EAAEE,KAAK,CAACF,SAAN,CAAgBoB,MAAhB,CAAuBV,QAAQ,IAAIA,QAAQ,CAACC,EAAT,IAAeQ,YAAY,CAACR,EAA5B,KAAmCD,QAAQ,CAACE,KAAT,KAAmBO,YAAY,CAACP,KAAhC,IAAyCF,QAAQ,CAACG,IAAT,KAAkBM,YAAY,CAACN,IAA3G,CAAnC;AAAZ,OAAP;;AACJ;AACI,aAAOX,KAAP;AAhCR;AAkCH,CAnCD;;AAqCA,eAAeD,WAAf","sourcesContent":["import {cartActionsTypes} from \"./cart.types\";\n\nconst INITIAL_STATE = {\n    cartItems: [],\n}\n\nconst cartReducer = (state = INITIAL_STATE, action) => {\n    switch(action.type) {\n        case cartActionsTypes.ADD_ITEM_TO_CART:\n\n            const itemToAdd = action.payload  \n            const itemExists = state.cartItems.find(cartItem => cartItem.id === itemToAdd.id && cartItem.color === itemToAdd.color && cartItem.size === itemToAdd.size)\n            \n            if (itemExists) {\n\n                return {\n\n                    cartItems: state.cartItems.map(cartItem => {\n\n                        if (cartItem.id === itemToAdd.id && cartItem.color === itemToAdd.color && cartItem.size === itemToAdd.size) {\n                            return {...cartItem, qty: cartItem.qty + 1, color: itemToAdd.color, size: itemToAdd.size}\n\n                        } else {\n                            console.log(\"item EXISTS case 2\")\n                            return {...cartItem}\n                        }\n\n                    })\n                }                \n            } else {\n                return {\n                    cartItems: [...state.cartItems, itemToAdd]\n                }\n            }\n            \n        case cartActionsTypes.REMOVE_ITEM_FROM_CART:\n            const itemToRemove = action.payload  \n            return {cartItems: state.cartItems.filter(cartItem => cartItem.id != itemToRemove.id && (cartItem.color !== itemToRemove.color || cartItem.size !== itemToRemove.size))}\n        default:\n            return state\n    }\n}\n\nexport default cartReducer"]},"metadata":{},"sourceType":"module"}