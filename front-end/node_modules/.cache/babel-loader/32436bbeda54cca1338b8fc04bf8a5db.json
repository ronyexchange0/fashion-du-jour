{"ast":null,"code":"import { createStore, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport rootReducer from \"./root-reducer.js\";\nconst cartItems = localStorage.getItem(\"cartItems\") ? JSON.parse(localStorage.getItem(\"cartItems\")) : [];\nconst userInfo = localStorage.getItem(\"userInfo\") ? JSON.parse(localStorage.getItem(\"userInfo\")) : {\n  lodaing: false\n};\nconsole.log(userInfo);\nconst initalState = {\n  cart: {\n    cartItems\n  },\n  user: { ...userInfo\n  }\n};\nconst middlewares = [thunk];\nconst store = createStore(rootReducer, initalState, composeWithDevTools(applyMiddleware(...middlewares)));\nexport default store;","map":{"version":3,"sources":["/home/rony/RONY/BUSINESS/ecommerce-react-node/front-end/src/redux/store.js"],"names":["createStore","applyMiddleware","thunk","composeWithDevTools","rootReducer","cartItems","localStorage","getItem","JSON","parse","userInfo","lodaing","console","log","initalState","cart","user","middlewares","store"],"mappings":"AAAA,SAAQA,WAAR,EAAqBC,eAArB,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAAQC,mBAAR,QAAkC,0BAAlC;AACA,OAAOC,WAAP,MAAwB,mBAAxB;AAEA,MAAMC,SAAS,GAAGC,YAAY,CAACC,OAAb,CAAqB,WAArB,IAAoCC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAX,CAApC,GAAoF,EAAtG;AAEA,MAAMG,QAAQ,GAAGJ,YAAY,CAACC,OAAb,CAAqB,UAArB,IAAmCC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CAAnC,GAAkF;AAACI,EAAAA,OAAO,EAAE;AAAV,CAAnG;AACAC,OAAO,CAACC,GAAR,CAAYH,QAAZ;AACA,MAAMI,WAAW,GAAG;AAChBC,EAAAA,IAAI,EAAE;AAACV,IAAAA;AAAD,GADU;AAEhBW,EAAAA,IAAI,EAAE,EAAC,GAAGN;AAAJ;AAFU,CAApB;AAKA,MAAMO,WAAW,GAAG,CAACf,KAAD,CAApB;AAEA,MAAMgB,KAAK,GAAGlB,WAAW,CAACI,WAAD,EAAcU,WAAd,EAA2BX,mBAAmB,CAACF,eAAe,CAAC,GAAGgB,WAAJ,CAAhB,CAA9C,CAAzB;AAEA,eAAeC,KAAf","sourcesContent":["import {createStore, applyMiddleware} from \"redux\";\nimport thunk from \"redux-thunk\";\nimport {composeWithDevTools} from \"redux-devtools-extension\";\nimport rootReducer from \"./root-reducer.js\"\n\nconst cartItems = localStorage.getItem(\"cartItems\") ? JSON.parse(localStorage.getItem(\"cartItems\")) : [] \n\nconst userInfo = localStorage.getItem(\"userInfo\") ? JSON.parse(localStorage.getItem(\"userInfo\")) : {lodaing: false}\nconsole.log(userInfo)\nconst initalState = {\n    cart: {cartItems},\n    user: {...userInfo}\n}\n\nconst middlewares = [thunk]\n\nconst store = createStore(rootReducer, initalState, composeWithDevTools(applyMiddleware(...middlewares)))\n\nexport default store"]},"metadata":{},"sourceType":"module"}