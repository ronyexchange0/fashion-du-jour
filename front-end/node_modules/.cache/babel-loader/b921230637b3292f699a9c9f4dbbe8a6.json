{"ast":null,"code":"import { productsActionsTypes } from \"./products.types\";\nconst INITIAL_STATE = {\n  loading: false,\n  products: [],\n  error: null,\n  productsloaded: false\n};\n\nconst productsReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case productsActionsTypes.PRODUCTS_LIST_REQUEST:\n      return {\n        loading: true,\n        products: [],\n        productsloaded: false\n      };\n\n    case productsActionsTypes.PRODUCTS_LIST_SUCCESS:\n      return {\n        loading: false,\n        productsloaded: true,\n        products: action.payload.data.filter(product => {\n          const priceToFilter = product.discount === 0 ? product.price : product.discount;\n\n          if (product.category === action.payload.cat || action.payload.cat === \"any\") {\n            if (priceToFilter > action.payload.from && priceToFilter < action.payload.to || action.payload.from == 0 && action.payload.to === \"any\") {\n              if (product.colors.includes(action.payload.color) || action.payload.color === \"any\") {\n                return true;\n              } else {\n                return false;\n              }\n            } else {\n              return false;\n            }\n          } else {\n            return false;\n          }\n        })\n      };\n\n    case productsActionsTypes.PRODUCTS_LIST_FAIL:\n      return {\n        loading: false,\n        error: action.payload\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default productsReducer;","map":{"version":3,"sources":["/home/rony/RONY/BUSINESS/ecommerce-react-node/front-end/src/redux/products/products.reducer.js"],"names":["productsActionsTypes","INITIAL_STATE","loading","products","error","productsloaded","productsReducer","state","action","type","PRODUCTS_LIST_REQUEST","PRODUCTS_LIST_SUCCESS","payload","data","filter","product","priceToFilter","discount","price","category","cat","from","to","colors","includes","color","PRODUCTS_LIST_FAIL"],"mappings":"AAAA,SAAQA,oBAAR,QAAmC,kBAAnC;AAEA,MAAMC,aAAa,GAAG;AAClBC,EAAAA,OAAO,EAAE,KADS;AAElBC,EAAAA,QAAQ,EAAE,EAFQ;AAGlBC,EAAAA,KAAK,EAAE,IAHW;AAIlBC,EAAAA,cAAc,EAAE;AAJE,CAAtB;;AASA,MAAMC,eAAe,GAAG,CAACC,KAAK,GAAGN,aAAT,EAAwBO,MAAxB,KAAmC;AACvD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKT,oBAAoB,CAACU,qBAA1B;AACI,aAAO;AAACR,QAAAA,OAAO,EAAE,IAAV;AAAgBC,QAAAA,QAAQ,EAAE,EAA1B;AAA8BE,QAAAA,cAAc,EAAE;AAA9C,OAAP;;AACJ,SAAKL,oBAAoB,CAACW,qBAA1B;AACI,aAAO;AACHT,QAAAA,OAAO,EAAE,KADN;AAEHG,QAAAA,cAAc,EAAE,IAFb;AAGHF,QAAAA,QAAQ,EAAEK,MAAM,CAACI,OAAP,CAAeC,IAAf,CAAoBC,MAApB,CAA2BC,OAAO,IAAI;AAE5C,gBAAMC,aAAa,GAAGD,OAAO,CAACE,QAAR,KAAqB,CAArB,GAAyBF,OAAO,CAACG,KAAjC,GAAyCH,OAAO,CAACE,QAAvE;;AAEA,cAAIF,OAAO,CAACI,QAAR,KAAqBX,MAAM,CAACI,OAAP,CAAeQ,GAApC,IAA2CZ,MAAM,CAACI,OAAP,CAAeQ,GAAf,KAAuB,KAAtE,EAA6E;AAEzE,gBAAKJ,aAAa,GAAGR,MAAM,CAACI,OAAP,CAAeS,IAA/B,IAAuCL,aAAa,GAAGR,MAAM,CAACI,OAAP,CAAeU,EAAvE,IAA+Ed,MAAM,CAACI,OAAP,CAAeS,IAAf,IAAuB,CAAvB,IAA4Bb,MAAM,CAACI,OAAP,CAAeU,EAAf,KAAsB,KAArI,EAA6I;AACzI,kBAAIP,OAAO,CAACQ,MAAR,CAAeC,QAAf,CAAwBhB,MAAM,CAACI,OAAP,CAAea,KAAvC,KAAiDjB,MAAM,CAACI,OAAP,CAAea,KAAf,KAAyB,KAA9E,EAAqF;AACjF,uBAAO,IAAP;AACH,eAFD,MAEO;AACH,uBAAO,KAAP;AACH;AAEJ,aAPD,MAOO;AACH,qBAAO,KAAP;AACH;AAEJ,WAbD,MAaO;AACH,mBAAO,KAAP;AACH;AACJ,SApBS;AAHP,OAAP;;AA0BJ,SAAKzB,oBAAoB,CAAC0B,kBAA1B;AACI,aAAO;AAACxB,QAAAA,OAAO,EAAE,KAAV;AAAiBE,QAAAA,KAAK,EAAEI,MAAM,CAACI;AAA/B,OAAP;;AACJ;AACI,aAAOL,KAAP;AAjCR;AAmCH,CApCD;;AAsCA,eAAeD,eAAf","sourcesContent":["import {productsActionsTypes} from \"./products.types\";\n\nconst INITIAL_STATE = {\n    loading: false,\n    products: [],\n    error: null,\n    productsloaded: false\n}\n\n\n\nconst productsReducer = (state = INITIAL_STATE, action) => {\n    switch (action.type) {\n        case productsActionsTypes.PRODUCTS_LIST_REQUEST:\n            return {loading: true, products: [], productsloaded: false}\n        case productsActionsTypes.PRODUCTS_LIST_SUCCESS:\n            return {\n                loading: false, \n                productsloaded: true,\n                products: action.payload.data.filter(product => {\n\n                    const priceToFilter = product.discount === 0 ? product.price : product.discount \n\n                    if (product.category === action.payload.cat || action.payload.cat === \"any\") {\n                        \n                        if ((priceToFilter > action.payload.from && priceToFilter < action.payload.to) || (action.payload.from == 0 && action.payload.to === \"any\")) {\n                            if (product.colors.includes(action.payload.color) || action.payload.color === \"any\") {\n                                return true\n                            } else {\n                                return false\n                            }\n                        \n                        } else {\n                            return false\n                        }\n\n                    } else {\n                        return false\n                    }\n                })\n            }\n  \n        case productsActionsTypes.PRODUCTS_LIST_FAIL:\n            return {loading: false, error: action.payload}\n        default: \n            return state\n    }\n}\n\nexport default productsReducer"]},"metadata":{},"sourceType":"module"}