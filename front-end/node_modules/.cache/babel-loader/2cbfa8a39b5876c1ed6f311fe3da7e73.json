{"ast":null,"code":"import { removeItemFromCartUtil, addItemToCartUtil } from \"./cart.utils.js\";\nimport { cartActionsTypes } from \"./cart.types\";\nconst INITIAL_STATE = {\n  cartItems: []\n};\n\nconst cartReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case cartActionsTypes.ADD_ITEM_TO_CART:\n      return {\n        cartItems: addItemToCartUtil(state.cartItems, action.payload)\n      };\n\n    case cartActionsTypes.REMOVE_ITEM_FROM_CART:\n      return {\n        cartItems: removeItemFromCartUtil(state.cartItems, action.payload)\n      };\n\n    case cartActionsTypes.INCREASE_ITEM_QUANTITY:\n      const itemToIncrease = action.payload;\n      return {\n        cartItems: state.cartItems.map(cartItem => cartItem.id === itemToIncrease.id && cartItem.color === itemToIncrease.color && cartItem.size === itemToIncrease.size ? { ...cartItem,\n          qty: cartItem.qty + 1\n        } : cartItem)\n      };\n\n    case cartActionsTypes.DECREASE_ITEM_QUANTITY:\n      const itemToDecrease = action.payload;\n      return {\n        cartItems: state.cartItems.map(cartItem => cartItem.id === itemToDecrease.id && cartItem.color === itemToDecrease.color && cartItem.size === itemToDecrease.size ? { ...cartItem,\n          qty: cartItem.qty - 1\n        } : cartItem)\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default cartReducer;","map":{"version":3,"sources":["/home/rony/RONY/BUSINESS/ecommerce-react-node/front-end/src/redux/cart/cart.reducer.js"],"names":["removeItemFromCartUtil","addItemToCartUtil","cartActionsTypes","INITIAL_STATE","cartItems","cartReducer","state","action","type","ADD_ITEM_TO_CART","payload","REMOVE_ITEM_FROM_CART","INCREASE_ITEM_QUANTITY","itemToIncrease","map","cartItem","id","color","size","qty","DECREASE_ITEM_QUANTITY","itemToDecrease"],"mappings":"AAAA,SACIA,sBADJ,EAEIC,iBAFJ,QAGO,iBAHP;AAIA,SAAQC,gBAAR,QAA+B,cAA/B;AAEA,MAAMC,aAAa,GAAG;AAClBC,EAAAA,SAAS,EAAE;AADO,CAAtB;;AAIA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGH,aAAT,EAAwBI,MAAxB,KAAmC;AACnD,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKN,gBAAgB,CAACO,gBAAtB;AACI,aAAO;AAACL,QAAAA,SAAS,EAAEH,iBAAiB,CAACK,KAAK,CAACF,SAAP,EAAkBG,MAAM,CAACG,OAAzB;AAA7B,OAAP;;AAEJ,SAAKR,gBAAgB,CAACS,qBAAtB;AACI,aAAO;AAACP,QAAAA,SAAS,EAAEJ,sBAAsB,CAACM,KAAK,CAACF,SAAP,EAAkBG,MAAM,CAACG,OAAzB;AAAlC,OAAP;;AAEJ,SAAKR,gBAAgB,CAACU,sBAAtB;AACI,YAAMC,cAAc,GAAGN,MAAM,CAACG,OAA9B;AACA,aAAO;AAACN,QAAAA,SAAS,EAAEE,KAAK,CAACF,SAAN,CAAgBU,GAAhB,CAAoBC,QAAQ,IAC3CA,QAAQ,CAACC,EAAT,KAAgBH,cAAc,CAACG,EAA/B,IAAqCD,QAAQ,CAACE,KAAT,KAAmBJ,cAAc,CAACI,KAAvE,IAAgFF,QAAQ,CAACG,IAAT,KAAkBL,cAAc,CAACK,IAAjH,GAAwH,EAAC,GAAGH,QAAJ;AAAcI,UAAAA,GAAG,EAAEJ,QAAQ,CAACI,GAAT,GAAe;AAAlC,SAAxH,GAA+JJ,QADhJ;AAAZ,OAAP;;AAIJ,SAAKb,gBAAgB,CAACkB,sBAAtB;AACI,YAAMC,cAAc,GAAGd,MAAM,CAACG,OAA9B;AACA,aAAO;AAACN,QAAAA,SAAS,EAAEE,KAAK,CAACF,SAAN,CAAgBU,GAAhB,CAAoBC,QAAQ,IAC3CA,QAAQ,CAACC,EAAT,KAAgBK,cAAc,CAACL,EAA/B,IAAqCD,QAAQ,CAACE,KAAT,KAAmBI,cAAc,CAACJ,KAAvE,IAAgFF,QAAQ,CAACG,IAAT,KAAkBG,cAAc,CAACH,IAAjH,GAAwH,EAAC,GAAGH,QAAJ;AAAcI,UAAAA,GAAG,EAAEJ,QAAQ,CAACI,GAAT,GAAe;AAAlC,SAAxH,GAA+JJ,QADhJ;AAAZ,OAAP;;AAIJ;AACI,aAAOT,KAAP;AApBR;AAsBH,CAvBD;;AAyBA,eAAeD,WAAf","sourcesContent":["import { \n    removeItemFromCartUtil,\n    addItemToCartUtil\n} from \"./cart.utils.js\";\nimport {cartActionsTypes} from \"./cart.types\";\n\nconst INITIAL_STATE = {\n    cartItems: [],\n}\n\nconst cartReducer = (state = INITIAL_STATE, action) => {\n    switch(action.type) {\n        case cartActionsTypes.ADD_ITEM_TO_CART:\n            return {cartItems: addItemToCartUtil(state.cartItems, action.payload)}\n            \n        case cartActionsTypes.REMOVE_ITEM_FROM_CART:\n            return {cartItems: removeItemFromCartUtil(state.cartItems, action.payload)}\n\n        case cartActionsTypes.INCREASE_ITEM_QUANTITY: \n            const itemToIncrease = action.payload\n            return {cartItems: state.cartItems.map(cartItem => (\n                cartItem.id === itemToIncrease.id && cartItem.color === itemToIncrease.color && cartItem.size === itemToIncrease.size ? {...cartItem, qty: cartItem.qty + 1} : cartItem\n            ))}\n\n        case cartActionsTypes.DECREASE_ITEM_QUANTITY:\n            const itemToDecrease = action.payload\n            return {cartItems: state.cartItems.map(cartItem => (\n                cartItem.id === itemToDecrease.id && cartItem.color === itemToDecrease.color && cartItem.size === itemToDecrease.size ? {...cartItem, qty: cartItem.qty - 1} : cartItem\n            ))}\n\n        default:\n            return state\n    }\n}\n\nexport default cartReducer"]},"metadata":{},"sourceType":"module"}