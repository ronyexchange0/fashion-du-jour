{"ast":null,"code":"import _regeneratorRuntime from\"/home/rony/RONY/BUSINESS/ecommerce-react-node/front-end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/rony/RONY/BUSINESS/ecommerce-react-node/front-end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import catsActionsTypes from\"./categories.types\";import axios from\"axios\";export var getCats=function getCats(){return/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch){var _yield$axios$get,data;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;dispatch({type:catsActionsTypes.CATS_REQUEST});_context.next=4;return axios.get(\"/api/categories\");case 4:_yield$axios$get=_context.sent;data=_yield$axios$get.data;dispatch({type:catsActionsTypes.CATS_SUCCESS,payload:data});_context.next=12;break;case 9:_context.prev=9;_context.t0=_context[\"catch\"](0);dispatch({type:catsActionsTypes.CATS_FAIL,payload:_context.t0});case 12:case\"end\":return _context.stop();}}},_callee,null,[[0,9]]);}));return function(_x){return _ref.apply(this,arguments);};}();};","map":{"version":3,"sources":["/home/rony/RONY/BUSINESS/ecommerce-react-node/front-end/src/redux/categories/categories.actions.js"],"names":["catsActionsTypes","axios","getCats","dispatch","type","CATS_REQUEST","get","data","CATS_SUCCESS","payload","CATS_FAIL"],"mappings":"yVAAA,MAAOA,CAAAA,gBAAP,KAA6B,oBAA7B,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CAEA,MAAO,IAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,kGAAM,iBAAOC,QAAP,4JAErBA,QAAQ,CAAC,CAACC,IAAI,CAAEJ,gBAAgB,CAACK,YAAxB,CAAD,CAAR,CAFqB,sBAIAJ,CAAAA,KAAK,CAACK,GAAN,CAAU,iBAAV,CAJA,uCAIdC,IAJc,kBAIdA,IAJc,CAMrBJ,QAAQ,CAAC,CACLC,IAAI,CAAEJ,gBAAgB,CAACQ,YADlB,CAELC,OAAO,CAAEF,IAFJ,CAAD,CAAR,CANqB,+EAWrBJ,QAAQ,CAAC,CACLC,IAAI,CAAEJ,gBAAgB,CAACU,SADlB,CAELD,OAAO,YAFF,CAAD,CAAR,CAXqB,oEAAN,gEAAhB","sourcesContent":["import catsActionsTypes from \"./categories.types\";\nimport axios from \"axios\";\n\nexport const getCats = () => async (dispatch) => {\n    try {\n        dispatch({type: catsActionsTypes.CATS_REQUEST})\n\n        const {data} = await axios.get(\"/api/categories\")\n        \n        dispatch({\n            type: catsActionsTypes.CATS_SUCCESS,\n            payload: data\n        })\n    } catch (error) {\n        dispatch({\n            type: catsActionsTypes.CATS_FAIL,\n            payload: error\n        })\n    }\n}"]},"metadata":{},"sourceType":"module"}