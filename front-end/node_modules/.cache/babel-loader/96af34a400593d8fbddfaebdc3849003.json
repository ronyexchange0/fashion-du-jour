{"ast":null,"code":"import { cartActionsTypes } from \"./cart.types\";\nconst INITIAL_STATE = {\n  cartItems: []\n};\n\nconst cartReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case cartActionsTypes.ADD_ITEM_TO_CART:\n      const itemExists = state.cartItems.find(cartItem => cartItem.id === action.payload.id);\n\n      if (itemExists) {\n        return {\n          cartItems: state.cartItems.map(cartItem => {\n            cartItem.id === itemExists.id ? { ...cartItem,\n              qty: 2\n            } : \"\";\n          })\n        };\n      } else {\n        return {\n          cartItems: [...state.cartItems, action.payload]\n        };\n      }\n\n    case cartActionsTypes.REMOVE_ITEM_FROM_CART:\n      return {\n        cartItems: state.cartItems.filter(cartItem => cartItem.id != action.payload)\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default cartReducer;","map":{"version":3,"sources":["/home/rony/RONY/BUSINESS/ecommerce-react-node/front-end/src/redux/cart/cart.reducer.js"],"names":["cartActionsTypes","INITIAL_STATE","cartItems","cartReducer","state","action","type","ADD_ITEM_TO_CART","itemExists","find","cartItem","id","payload","map","qty","REMOVE_ITEM_FROM_CART","filter"],"mappings":"AAAA,SAAQA,gBAAR,QAA+B,cAA/B;AAEA,MAAMC,aAAa,GAAG;AAClBC,EAAAA,SAAS,EAAE;AADO,CAAtB;;AAIA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGH,aAAT,EAAwBI,MAAxB,KAAmC;AACnD,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKN,gBAAgB,CAACO,gBAAtB;AACI,YAAMC,UAAU,GAAGJ,KAAK,CAACF,SAAN,CAAgBO,IAAhB,CAAqBC,QAAQ,IAAIA,QAAQ,CAACC,EAAT,KAAgBN,MAAM,CAACO,OAAP,CAAeD,EAAhE,CAAnB;;AACA,UAAIH,UAAJ,EAAgB;AACZ,eAAO;AACHN,UAAAA,SAAS,EAAEE,KAAK,CAACF,SAAN,CAAgBW,GAAhB,CAAoBH,QAAQ,IAAI;AACvCA,YAAAA,QAAQ,CAACC,EAAT,KAAgBH,UAAU,CAACG,EAA3B,GAAgC,EAAC,GAAGD,QAAJ;AAAcI,cAAAA,GAAG,EAAE;AAAnB,aAAhC,GAAwD,EAAxD;AACH,WAFU;AADR,SAAP;AAKH,OAND,MAMO;AACH,eAAO;AACHZ,UAAAA,SAAS,EAAE,CAAC,GAAGE,KAAK,CAACF,SAAV,EAAqBG,MAAM,CAACO,OAA5B;AADR,SAAP;AAGH;;AACL,SAAKZ,gBAAgB,CAACe,qBAAtB;AACI,aAAO;AAACb,QAAAA,SAAS,EAAEE,KAAK,CAACF,SAAN,CAAgBc,MAAhB,CAAuBN,QAAQ,IAAIA,QAAQ,CAACC,EAAT,IAAeN,MAAM,CAACO,OAAzD;AAAZ,OAAP;;AACJ;AACI,aAAOR,KAAP;AAjBR;AAmBH,CApBD;;AAsBA,eAAeD,WAAf","sourcesContent":["import {cartActionsTypes} from \"./cart.types\";\n\nconst INITIAL_STATE = {\n    cartItems: [],\n}\n\nconst cartReducer = (state = INITIAL_STATE, action) => {\n    switch(action.type) {\n        case cartActionsTypes.ADD_ITEM_TO_CART:\n            const itemExists = state.cartItems.find(cartItem => cartItem.id === action.payload.id)\n            if (itemExists) {\n                return {\n                    cartItems: state.cartItems.map(cartItem => {\n                        cartItem.id === itemExists.id ? {...cartItem, qty: 2} : \"\"\n                    })\n                }                \n            } else {\n                return {\n                    cartItems: [...state.cartItems, action.payload]\n                }\n            }\n        case cartActionsTypes.REMOVE_ITEM_FROM_CART:\n            return {cartItems: state.cartItems.filter(cartItem => cartItem.id != action.payload)}\n        default:\n            return state\n    }\n}\n\nexport default cartReducer"]},"metadata":{},"sourceType":"module"}